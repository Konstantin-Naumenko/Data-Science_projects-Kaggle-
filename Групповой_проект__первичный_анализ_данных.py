# -*- coding: utf-8 -*-
"""Групповой_проект__Первичный_анализ_данных_Науменко К.Л..ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18wCvmd8SOG0va8huRMoi1tWuAsaO5CjB
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
# %matplotlib inline

"""# Визуальный анализ рейтингов шоу Netflix
<img src="https://pp.userapi.com/c854528/v854528797/c62ce/FiPEibYUxJc.jpg" width="40%">

Netflix за последние 5-10 лет обзавелись большим количеством зрителей. С увеличением числа зрителей увеличилось и разнообразие шоу. Соответственно, перед аналитиками из киноиндустрии встала задача исследования данных с рейтингами различных сериалов.  
В данном задании вам предстоит провести визуальный анализ датасета **1000 Netflix Shows** (по состоянию на 11.06.2017) и сделать выводы.

Описание признаков:
* `title` - название шоу.
* `rating` - рейтинг шоу. Например: G, PG, TV-14, TV-MA
* `ratingLevel` - описание рейтинговой группы и особенностей шоу.
* `ratingDescription` - рейтинг шоу, закодированный в числом
* `release year` - год выпуска шоу.
* `user rating score` - оценка пользователей.
* `user_rating_size` - общий рейтинг пользователей

## Требования к групповому проекту

В качестве результата ваша группа должна получить презентацию и защитить ее на дополнительном занятии (**N декабря в M часов**).  
Ссылка на шаблон к презентации: [ссылка](https://docs.google.com/presentation/d/1IJRb8SGiHm2BnjQ-MJXXFrzzjCUf1FhCCG6QDHDPin0/edit?usp=sharing).  
Вы можете менять оформление презентации, но помните, что результат должен быть релевантен для демонстрации заказчику. Например, вставлять в презентацию строчки кода не стоит :)

Помимо презентации, каждому из участников проекта нужно будет сдать свой notebook c решением на проверку. Наши ассистенты проверять ваш код, визуализацию и выводы, после чего вернутся к вам с фидбеком. 

Вопросы, на которые нужно ответить в презентации: 
- сколько рейтинговых групп представлено в данных?
- какие оценки пользователи ставят чаще всего?
- какие оценки пользователи ставят в среднем?
- в какие годы были запущены шоу?
- можно ли сделать вывод, что 2017 год успешнее для Netflix?
- в каких рейтинговых группах запущены шоу на Netflix?
- выберите любое шоу (например, самое понравившееся) и составьте его описательный портрет. На какие вопросы о нем вам было бы интересно ответить, если бы вы были заказчиком? Ответьте на эти вопросы :) 

Вопросы ниже помогут вам ответить на вопросы из презентации и сопроводить выводы релевантной визуализацией. 

Любой хороший data-scientist должен уметь работать в команде, поэтому распределение ваших усилий в проекте остается за вами. Как пример, вы можете распределить вопросы/слайды между собой.

При возникновении каких-либо проблем при выполнении группового проекта обязательно сразу пишите Екатерине (@poka_katt).

## Решение

Скачайте данные: [ссылка](https://drive.google.com/file/d/1jN8W_OQWm2Wryvn6rrSm58no679X_be_/view?usp=sharing). Загрузите данные, выполнив код ниже.
"""

from google.colab import files
uploaded = files.upload()

# код ниже менять нельзя, просто запустите ячейку!
data = pd.read_csv("netflix_data.csv", encoding='cp437')
del data['ratingDescription'], data['user rating size']

"""Удалите из данных дупликаты. """

df = data.drop_duplicates()
df

"""Сколько рейтинговых групп представлено в данных?"""

uniq_rating = df['rating'].unique()
print('Len uniq groups:', len(uniq_rating))

"""Какие оценки пользователи ставят чаще? Постройте гистограмму оценок."""

(values,counts) = np.unique(df["user rating score"], return_counts = True)
ind = np.argmax(counts)
print(df['user rating score'].value_counts())
print("Чаще всего ставят оценку", values[ind])
df['user rating score'].hist(bins=50,figsize=(20,6))

"""***Вывод:*** Чаще всего пользователи ставят оценки от 96 до 98 баллов.

Выведите основную информацию об оценках пользователей: среднее, стандартное отклонение, минимум, максимум, медиана. Отличаются ли медиана и среднее? Могут ли данные характеристики значительно отличаться? Почему?
"""

print( "Score user rating mean: {:2.2f}, std_dev: {:2.2f}, min: {}, max: {}, median: {}".format( df['user rating score'].mean(), df['user rating score'].std(), df['user rating score'].min(), df['user rating score'].max(), df['user rating score'].median() ) )

"""***Ответ:*** Медиана и среднее отличаются незначительно. При нормальном законе распределения эти характеристики отличаются незначительно, в случае ассиметрии эти характеристики будут отличаться значительно.

В какие годы были запущены шоу, представленные в датасете?
"""

years = df['release year'].unique()
sorted(years)

"""Постройте график, показывающий распределение количества запущенных шоу в зависимости от года. Наблюдается ли рост? Есть ли выбросы?"""

byear = np.unique(df["release year"], return_counts = True)
result = np.column_stack((byear))
result2 = pd.DataFrame(data = result)
result2.columns=["God", "Kolvo"]
God = result2["God"]
Kolvo = result2["Kolvo"]
plt.figure(figsize=(20, 4))
plt.xticks(np.arange(0, 2021, step = 2))
plt.bar(God, Kolvo, align = 'center')
plt.grid()
plt.show()

"""Теперь посмотрим на выброс."""

byyear = df.groupby('release year').size()
byyear.loc[ 2010 :2020 ].plot()

"""***Вывод:*** в 2016 году наблюдался скачкообразный рост количества продукции Netflix.

Сравните среднюю оценку пользователей в 2016 со средней оценкой в 2017. Можно ли сделать вывод, что 2017 год успешнее для Netflix? ("Успешнее" значит, что пользователи в среднем ставили более высокие оценки)  
Ответить на этот вопрос вам поможет график, который вы построили выше.
"""

print( "Mean user rating in 2016: {:2.2f}, mean in 2017: {:2.2f} ".format( df.loc[ df['release year']==2016 ]['user rating score'].mean(), df.loc[ df['release year']==2017 ]['user rating score'].mean()  ) )

df.loc[ df['release year']==2016 ]['user rating score'].hist(bins=40,density=True)

df.loc[ df['release year']==2017 ]['user rating score'].hist(bins=40,density=True)

"""***Вывод:*** Средняя оценка пользовательских рейтингов в 2017 выше, чем в 2016. Это может быть связано с количеством запущенных шоу в 2016, за счет чего увеличен разброс оценок. Построенные гистограммы пользовательских оценок показывают, что в 2017 пользователи чаще ставили высокие оценки, по сравнению с 2016. 

Из этого можно сделать вывод, что 2017 год для Netflix **успешнее**.

Ниже представлены два графика, показывающие распределение шоу по рейтинговым группам. Какой тип графика визуально более интерпретируемый? ([Подсказка](https://sun9-40.userapi.com/c854228/v854228652/c754f/j6z5gMjJy2k.jpg))  
Постройте самостоятельно график, который считаете более интерпретируемым. Сделайте вывод.

![Charts](https://pp.userapi.com/c852024/v852024281/1a53b1/jSOsBIhxK3U.jpg)
"""

gr = df.groupby('rating').size().sort_values(ascending=False)
gr.plot.pie(figsize=(6, 6),autopct='%1.1f%%', shadow=True,  startangle=0)

len(gr)

"""***Вывод:*** Круговая диаграмма отсортированных значений, выравненных по углу наиболее информативна в данном случае, и упрощает восприятие информации.

Теперь вам нужно выбрать любое из представленных шоу и при помощи изученных инструментов составить описательный портрет этого шоу :) Аналитики и data-scientist-ы очень любят все сравнивать, поэтому при составлении описательного портрета рекомендуем вам сравнить выбранное шоу с другими по каким-либо характеристикам. Результаты не забудьте внести в презентацию. При возникновении трудностей обязательно пишите в чат, преподавателю или ассистентам.
"""

# выбираем понравившееся шоу
House = df.loc[df['title'] == 'House of Cards']
House

from skimage import io
url='https://www.kino-teatr.ru/movie/poster/103803/pv_68713.jpg'
image = io.imread(url)
plt.imshow(image)
plt.show()

Etot_god = df.loc[df['release year'] == 2016]
# узнаём, сколько шоу было запущено в 2016 году
Etot_god.shape[0]
df.shape[0]
# узнаём, какой процент от всех шоу запущено в 2016 году
Procent = Etot_god.shape[0] / df.shape[0] * 100
print("В 2016 году выпущено", Etot_god.shape[0], "шоу. Это составляет", Procent, "процента от всех шоу, выпущенных Netflix.")

Rate = House['user rating score']
Srednee = np.mean(df["user rating score"])
Raznica = Rate - Srednee

# оставляем только шоу с оценками
Notnull = df[df["user rating score"].notna()]

# узнаем, сколько шоу имели оценку выше/ниже/равную за всё время
biggerrate = Notnull.loc[(Notnull['user rating score'] > 91)]
lowerrate = Notnull.loc[(Notnull['user rating score'] < 91)]
equalrate = Notnull.loc[(Notnull['user rating score'] == 91)]

# узнаем, сколько шоу имели оценку выше/ниже/равную в 2016 году
Release2016 = Notnull.loc[df['release year'] == 2016]
biggerrate2016 = Release2016.loc[(Release2016['user rating score'] > 91)]
lowerrate2016 = Release2016.loc[(Release2016['user rating score'] < 91)]
equalrate2016 = Release2016.loc[(Release2016['user rating score'] == 91)]

# находим процент шоу с оценкой ниже за всё время/за 2016 год
Sravnenie1 = lowerrate.shape[0] / Notnull.shape[0] * 100
Sravnenie2 = lowerrate2016.shape[0] / Release2016.shape[0] * 100

print("Разница со средним значением рейтинга составляет", float(Raznica), "\n",
      "Шоу имеет оценки выше, чем у", Sravnenie1, "процентов шоу за всё время\n"
      "Шоу имеет оценки выше, чем у", Sravnenie2, "процентов шоу за 2016 год")

# оставляем только шоу с рейтингом TV-MA
Ratingandyear = Release2016.loc[(Release2016['rating'] == "TV-MA")]

# находим количество шоу с оценками выше/ниже в 2016 году, но с таким же рейтингом 
biggerrating2016 = Ratingandyear.loc[(Ratingandyear['user rating score'] > 91)]
lowerrating2016 = Ratingandyear.loc[(Ratingandyear['user rating score'] < 91)]
equalrating2016 = Ratingandyear.loc[(Ratingandyear['user rating score'] == 91)]

# находим проценты
Sravnenie2016_1 = biggerrating2016.shape[0] / Ratingandyear.shape[0] * 100
Sravnenie2016_2 = lowerrating2016.shape[0] / Ratingandyear.shape[0] * 100

print("У шоу рейтинг TV-MA, в 2016 году лишь", float(Sravnenie2016_1), "процентов шоу имели оценки выше. Но", float(Sravnenie2016_2), "имели рейтинг оценок ниже, чем у House of Cards.")
Ratingandyear

# график распределения оценок для шоу 2016 года с рейтингом TV-MA
byrate = Ratingandyear.groupby('user rating score').size()
byrate.plot.bar(figsize=(15,8),lw=5,grid=True)

"""***Вывод:*** Сериал **Карточный домик** выпущен в 2016 году, и имеет рейтинг **91.0**. Шоу имеет оценки выше, чем у 67% шоу за всё время, и выше чем у 55% шоу за 2016 год. У шоу рейтинг TV-MA. В 2016 году лишь 26% шоу имели оценки выше. Но 63% шоу имели рейтинг оценок ниже, чем у House of Cards."""